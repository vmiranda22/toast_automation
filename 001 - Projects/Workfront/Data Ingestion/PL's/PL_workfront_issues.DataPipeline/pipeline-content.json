{
  "properties": {
    "activities": [
      {
        "type": "Until",
        "typeProperties": {
          "expression": {
            "value": "@equals(variables('flag_until'), 0)",
            "type": "Expression"
          },
          "timeout": "0.12:00:00",
          "activities": [
            {
              "type": "SetVariable",
              "typeProperties": {
                "variableName": "temp_j",
                "value": {
                  "value": "@add(variables('counter_i'),2000)",
                  "type": "Expression"
                }
              },
              "policy": {
                "secureInput": false,
                "secureOutput": false
              },
              "name": "temp_j",
              "dependsOn": [
                {
                  "activity": "Set variable1",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ]
            },
            {
              "type": "SetVariable",
              "typeProperties": {
                "variableName": "counter_i",
                "value": {
                  "value": "@variables('temp_j')",
                  "type": "Expression"
                }
              },
              "policy": {
                "secureInput": false,
                "secureOutput": false
              },
              "name": "Test",
              "dependsOn": [
                {
                  "activity": "temp_j",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ]
            },
            {
              "type": "Copy",
              "typeProperties": {
                "source": {
                  "type": "RestSource",
                  "requestMethod": "GET",
                  "paginationRules": {
                    "supportRFC5988": "true"
                  },
                  "httpRequestTimeout": "00:01:40",
                  "requestInterval": "00.00:00:00.010",
                  "datasetSettings": {
                    "type": "RestResource",
                    "typeProperties": {
                      "relativeUrl": {
                        "value": "@concat('/attask/api/v19.0/issue/search?apiKey=al7s4u94ggluu08vnh7atni3p5sagebm&method=GET&fields=*,parameterValues&lastUpdateDate=',string(variables('MaxDate')),'&lastUpdateDate_Mod=gt&$$FIRST=', string(variables('counter_i')), '&$$LIMIT=2000')",
                        "type": "Expression"
                      }
                    },
                    "schema": [],
                    "externalReferences": {
                      "connection": "6e37e5a0-e6b2-48cc-854f-174dcb4f39f0"
                    },
                    "annotations": []
                  }
                },
                "sink": {
                  "type": "JsonSink",
                  "formatSettings": {
                    "type": "JsonWriteSettings"
                  },
                  "storeSettings": {
                    "type": "LakehouseWriteSettings"
                  },
                  "datasetSettings": {
                    "type": "Json",
                    "typeProperties": {
                      "location": {
                        "type": "LakehouseLocation",
                        "folderPath": "JSON",
                        "fileName": {
                          "value": "@concat('parameterValues', variables('counter_i'), '.json')",
                          "type": "Expression"
                        }
                      }
                    },
                    "schema": {},
                    "linkedService": {
                      "name": "LH_Workfront",
                      "properties": {
                        "type": "Lakehouse",
                        "typeProperties": {
                          "artifactId": "fb991855-cd6b-9135-4aed-12defd91a974",
                          "workspaceId": "00000000-0000-0000-0000-000000000000",
                          "rootFolder": "Files"
                        },
                        "annotations": []
                      }
                    },
                    "annotations": []
                  }
                },
                "enableStaging": false
              },
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureInput": false,
                "secureOutput": false
              },
              "name": "Copy data1",
              "dependsOn": []
            },
            {
              "type": "SetVariable",
              "typeProperties": {
                "variableName": "flag_until",
                "value": {
                  "value": "@if(greater(activity('Copy data1').output.dataRead, 8), 1, 0)\n",
                  "type": "Expression"
                }
              },
              "policy": {
                "secureInput": false,
                "secureOutput": false
              },
              "name": "Set variable1",
              "dependsOn": [
                {
                  "activity": "Copy data1",
                  "dependencyConditions": [
                    "Completed"
                  ]
                }
              ]
            }
          ]
        },
        "name": "Until1",
        "dependsOn": [
          {
            "activity": "Set variable2",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Lookup",
        "typeProperties": {
          "source": {
            "type": "AzureSqlSource",
            "sqlReaderQuery": "SELECT MAX([lastUpdateDate]) as max\nFROM [LH_Workfront].[dbo].[flattened_issues];",
            "partitionOption": "None",
            "queryTimeout": "02:00:00"
          },
          "datasetSettings": {
            "type": "AzureSqlTable",
            "typeProperties": {
              "database": "LH_Workfront"
            },
            "schema": [],
            "externalReferences": {
              "connection": "398abf1d-e72d-4c63-86e4-a2011aa1b51d"
            },
            "annotations": []
          },
          "firstRowOnly": true
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Lookup1",
        "dependsOn": [
          {
            "activity": "Delete data1_copy1",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "SetVariable",
        "typeProperties": {
          "variableName": "MaxDate",
          "value": {
            "value": "@activity('Lookup1').output.firstRow.max\n",
            "type": "Expression"
          }
        },
        "policy": {
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Set variable2",
        "dependsOn": [
          {
            "activity": "Lookup1",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Delete",
        "typeProperties": {
          "enableLogging": false,
          "datasetSettings": {
            "type": "Binary",
            "typeProperties": {
              "location": {
                "type": "LakehouseLocation",
                "folderPath": "JSON"
              }
            },
            "linkedService": {
              "name": "LH_Workfront",
              "properties": {
                "type": "Lakehouse",
                "typeProperties": {
                  "artifactId": "fb991855-cd6b-9135-4aed-12defd91a974",
                  "workspaceId": "00000000-0000-0000-0000-000000000000",
                  "rootFolder": "Files"
                },
                "annotations": []
              }
            },
            "annotations": []
          },
          "storeSettings": {
            "type": "LakehouseReadSettings",
            "recursive": false,
            "enablePartitionDiscovery": false
          }
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Delete data1",
        "dependsOn": [
          {
            "activity": "Notebook1",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "TridentNotebook",
        "typeProperties": {
          "notebookId": "200b8e23-7d6f-a13f-4f84-4af99b25591f",
          "workspaceId": "00000000-0000-0000-0000-000000000000"
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Notebook1",
        "dependsOn": [
          {
            "activity": "Until1",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Delete",
        "typeProperties": {
          "enableLogging": false,
          "datasetSettings": {
            "type": "Binary",
            "typeProperties": {
              "location": {
                "type": "LakehouseLocation",
                "folderPath": "JSON"
              }
            },
            "linkedService": {
              "name": "LH_Workfront",
              "properties": {
                "type": "Lakehouse",
                "typeProperties": {
                  "artifactId": "fb991855-cd6b-9135-4aed-12defd91a974",
                  "workspaceId": "00000000-0000-0000-0000-000000000000",
                  "rootFolder": "Files"
                },
                "annotations": []
              }
            },
            "annotations": []
          },
          "storeSettings": {
            "type": "LakehouseReadSettings",
            "recursive": false,
            "enablePartitionDiscovery": false
          }
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Delete data1_copy1",
        "dependsOn": []
      }
    ],
    "variables": {
      "counter_i": {
        "type": "Integer"
      },
      "temp_j": {
        "type": "Integer"
      },
      "flag_until": {
        "type": "Integer"
      },
      "MaxDate": {
        "type": "String"
      }
    }
  }
}