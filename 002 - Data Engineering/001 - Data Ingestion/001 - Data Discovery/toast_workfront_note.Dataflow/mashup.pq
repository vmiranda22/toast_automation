[StagingDefinition = [Kind = "FastCopy"]]
section Section1;
shared Query = let
  Source = Json.Document(Web.Contents("https://teladochealth.my.workfront.com/attask/api/v19.0/note/search?apiKey=al7s4u94ggluu08vnh7atni3p5sagebm&fields=*")),
  #"Converted to table" = Table.FromRecords({Source}),
  #"Expanded data" = Table.ExpandListColumn(#"Converted to table", "data"),
  #"Expanded data1" = Table.ExpandRecordColumn(#"Expanded data", "data", {"ID", "objCode", "attachDocumentID", "attachObjCode", "attachObjID", "attachOpTaskID", "attachWorkID", "attachWorkObjCode", "attachWorkUserID", "auditRecordID", "auditText", "auditType", "customerID", "documentID", "entryDate", "extRefID", "hasReplies", "html", "indent", "isDeleted", "isMessage", "isPrivate", "isReply", "iterationID", "noteObjCode", "noteText", "numLikes", "numReplies", "objID", "opTaskID", "ownerID", "parentEndorsementID", "parentJournalEntryID", "parentNoteID", "portfolioID", "programID", "projectID", "proofActionID", "proofID", "richTextNoteID", "securityRootID", "securityRootObjCode", "subject", "taskID", "templateID", "templateTaskID", "threadDate", "threadID", "timesheetID", "topNoteObjCode", "topObjID", "userID"}, {"data.ID", "data.objCode", "data.attachDocumentID", "data.attachObjCode", "data.attachObjID", "data.attachOpTaskID", "data.attachWorkID", "data.attachWorkObjCode", "data.attachWorkUserID", "data.auditRecordID", "data.auditText", "data.auditType", "data.customerID", "data.documentID", "data.entryDate", "data.extRefID", "data.hasReplies", "data.html", "data.indent", "data.isDeleted", "data.isMessage", "data.isPrivate", "data.isReply", "data.iterationID", "data.noteObjCode", "data.noteText", "data.numLikes", "data.numReplies", "data.objID", "data.opTaskID", "data.ownerID", "data.parentEndorsementID", "data.parentJournalEntryID", "data.parentNoteID", "data.portfolioID", "data.programID", "data.projectID", "data.proofActionID", "data.proofID", "data.richTextNoteID", "data.securityRootID", "data.securityRootObjCode", "data.subject", "data.taskID", "data.templateID", "data.templateTaskID", "data.threadDate", "data.threadID", "data.timesheetID", "data.topNoteObjCode", "data.topObjID", "data.userID"}),
  #"Changed column type" = Table.TransformColumnTypes(#"Expanded data1", {{"data.ID", type text}, {"data.objCode", type text}, {"data.auditRecordID", type text}, {"data.auditType", type text}, {"data.customerID", type text}, {"data.documentID", type text}, {"data.entryDate", type text}, {"data.extRefID", type text}, {"data.hasReplies", type logical}, {"data.html", type text}, {"data.indent", Int64.Type}, {"data.isDeleted", type logical}, {"data.isMessage", type logical}, {"data.isPrivate", type logical}, {"data.isReply", type logical}, {"data.noteObjCode", type text}, {"data.noteText", type text}, {"data.numLikes", Int64.Type}, {"data.numReplies", Int64.Type}, {"data.objID", type text}, {"data.opTaskID", type text}, {"data.ownerID", type text}, {"data.parentNoteID", type text}, {"data.projectID", type text}, {"data.proofID", Int64.Type}, {"data.richTextNoteID", type text}, {"data.securityRootID", type text}, {"data.securityRootObjCode", type text}, {"data.subject", type text}, {"data.taskID", type text}, {"data.threadDate", type text}, {"data.threadID", type text}, {"data.topNoteObjCode", type text}, {"data.topObjID", type text}})
in
  #"Changed column type";
